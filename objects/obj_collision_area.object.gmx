<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///충돌 영역 init
name = '';

z = 0;

collisionArea_w = 0;
collisionArea_h = 0;
collisionArea_l = 0;

origin_x = x;
origin_y = y;
origin_z = z;

parentID = noone;
ownerID = noone;

atk = 0;
delay = 0;
knb = false;
knbV = 0;
knbH = 0;
powZ = 0;
airZ = 0;
bnc = 0;
vShk = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///유지시간
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///위치 갱신

//설정된 부모가 있으면 좌표값을 따라간다.
with(parentID)
{
    if (cDir = RIGHT) other.x = x + other.origin_x;
    else other.x = x - other.origin_x;
        
    other.y = y + other.origin_y;
    other.z = z + other.origin_z;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///충돌영역 그리기

if (global.debug_mode == true)
{
    var x1 = -(collisionArea_w/2);
    var x2 =  (collisionArea_w/2);
    var y1 = -(collisionArea_h/2);
    var y2 =  (collisionArea_h/2);

    //upside
    draw_set_alpha(0.1);
    draw_set_color(c_red);
    draw_rectangle((x + x1), (y + y1) + z, (x + x2), (y + y1) - collisionArea_l + z, 0);
    draw_rectangle((x + x1), (y + y1) + z, (x + x2), (y + y1) - collisionArea_l + z, 1);
    draw_line((x + x1), (y + y1) + z, (x + x2), (y + y1) - collisionArea_l + z);
    
    //bottomside
    draw_set_alpha(0.1);
    draw_set_color(c_red);
    draw_rectangle((x + x1), (y + y2) + z, (x + x2), (y + y2) - collisionArea_l + z, 0);
    draw_set_alpha(0.6);
    draw_rectangle((x + x1), (y + y2) + z, (x + x2), (y + y2) - collisionArea_l + z, 1);
    draw_line((x + x1), (y + y2) + z, (x + x2), (y + y2) - collisionArea_l + z);

    //bottom
    draw_set_alpha(0.1);
    draw_set_color(c_blue)
    draw_rectangle((x + x1), (y + y1) + z, (x + x2), (y + y2) + z, 0);
    draw_rectangle((x + x1), (y + y1) + z, (x + x2), (y + y2) + z, 1);
    draw_rectangle((x - 2), (y - 2), (x + 2), (y + 2), 0);
    
    //top
    draw_set_alpha(0.4);
    draw_rectangle((x + x1), (y + y1) - collisionArea_l + z, (x + x2), (y + y2) - collisionArea_l + z, 1);
    
    //ground
    draw_set_alpha(1);
    draw_rectangle((x - 1), (y - 1), (x + 1), (y + 1), 0);
    draw_set_color(c_black);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
